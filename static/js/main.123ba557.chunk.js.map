{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","role","htmlFor","Textform","useState","text","setText","style","color","heading","backgroundColor","cursor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","copytext","document","getElementById","select","navigator","clipboard","writeText","newtext","replace","split","length","Alert","alert","class","msg","defaultProps","about","App","setmode","setalert","message","setTimeout","body","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.123ba557.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n           */}\r\n             <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n              <div className={`form-check form-switch text-${props.mode==='dark'?'light':''} `}>\r\n                <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"dark\"?\"light\":\"dark\"} Mode</label>\r\n                </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes={\r\n    title:PropTypes.string,\r\n    about:PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title:\"set title here\",\r\n    about:\"about goes here\"\r\n}","import React,{useState} from 'react'\r\nexport default function Textform(props) {\r\n    const handleupcase = ()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"UpperCase Mode has been enabled\",\"UpperCase\");\r\n    }\r\n\r\n    const handlelocase = ()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"LowerCase Mode has been enabled\",\"LowerCase\");\r\n    }\r\n\r\n    const copytext =()=>{\r\n        var copytext=document.getElementById(\"mybox\");\r\n        copytext.select();\r\n        navigator.clipboard.writeText(copytext.value);\r\n        props.showAlert(\"CopyText Mode has been enabled\",\"TextCopied\");\r\n    }\r\n\r\n    const cleartext = ()=>{\r\n        let newText= \" \";\r\n        setText(newText);\r\n        props.showAlert(\"ClearText Mode has been enabled\",\"TextCleared\");\r\n    }\r\n    \r\n    const Removeextraspaces= ()=>{\r\n       let newtext= text.replace(/\\s+/g,' '); \r\n       setText(newtext);\r\n       props.showAlert(\"Extra Space Removed Mode has been enabled\",\"XtraSpaceRemoved\");\r\n    }\r\n\r\n    const handleonchange=(event)=>{\r\n        \r\n        setText(event.target.value);\r\n    }\r\n\r\n    const[text,setText]=useState('');\r\n    \r\n    return (\r\n        <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n             <h1>{props.heading}</h1>\r\n             <div className=\"mb-3\">\r\n               <textarea className=\"form-control\" style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black',cursor:'pointer'}} value={text} onChange={handleonchange} id=\"mybox\" rows=\"8\" ></textarea>\r\n            </div> \r\n            <button className=\"btn btn-primary mx-1\" onClick={handleupcase}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handlelocase}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={cleartext}>Clear the Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={copytext}>Copy the Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={Removeextraspaces}>Remove Extra Spaces</button>\r\n    </div>\r\n\r\n    <div className=\"contianer my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h3>Your Text Summary here</h3>\r\n         <p>{text.split(\" \").length-1} words and {text.length} characters</p>\r\n         <p>{0.008*text.split(\" \").length-0.008} Minutes to read</p>\r\n         <p>Preview</p>\r\n         <p>{text.length>0?text:\"Enter something to preview here!\"}</p>\r\n    </div>\r\n    </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        \r\n        props.alert && <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg} \r\n            \r\n            </div>\r\n        \r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const  [mode,setmode]=useState('light');\n  const [alert,setalert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n\n    setTimeout( ()=>{\n      setalert(null);\n    },1500);\n  }\n\n  const togglemode=()=>{\n    if(mode===\"dark\")\n    {\n      setmode(\"'light\");\n      document.body.style.background='white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.title=\"TextUtils-Light Mode\";\n      // setInterval(()=>{\n      //   document.title=\"TextUtils Install Now\";\n      // },2000);\n      // setInterval(()=>{\n      //   document.title=\"TextUtils is Amanzing\";\n      // },1500);\n    }\n    else\n    {\n      setmode(\"dark\");\n      document.body.style.background='#331f38';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title=\"TextUtils-DarkMode\";\n     \n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n     \n     <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\" >\n     {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n           \n          {/* <Route exact path=\"/\"> */}\n          <Textform showAlert={showAlert} heading=\"Enter The Text to Analyze below\" mode={mode} />\n          {/* </Route>\n      </Switch> */}\n      \n    \n     </div>\n     {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}